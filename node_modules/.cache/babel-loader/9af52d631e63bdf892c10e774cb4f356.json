{"ast":null,"code":"var _jsxFileName = \"/Users/yingsizhou/Downloads/react-redux-weather-master/src/components/forecast.js\";\nimport React from 'react';\nimport Skycons from 'react-skycons';\nimport { connect } from 'react-redux';\n\nvar Forecast = function Forecast(props) {\n  var convert = function convert(F) {\n    return Math.round((F - 32) * 5 / 9);\n  };\n\n  var forecastlist = props.data.daily.data.map(function (obj, index) {\n    if (index < 7) {\n      var day = new Date(obj.time * 1000).getUTCDay();\n      var week = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\n      var icon = obj.icon.replace(/-/g, \"_\").toUpperCase();\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"col-lg-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"time\", {\n        title: new Date(obj.time * 1000),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, week[day]), React.createElement(Skycons, {\n        title: obj.summary,\n        width: \"128\",\n        height: \"128\",\n        style: {\n          width: '100%',\n          height: 'auto',\n          maxWidth: '150px'\n        },\n        color: \"black\",\n        icon: icon,\n        autoplay: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), props.mode === \"F\" ? Math.round(obj.temperatureMax) + \" 째F\" : convert(obj.temperatureMax) + \" 째C\"));\n    } else {\n      return null;\n    }\n  });\n  return React.createElement(\"div\", {\n    className: \"forecast border my-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-body text-secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row seven-cols\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, forecastlist)));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    data: state.data,\n    mode: state.mode\n  };\n};\n\nexport default connect(mapStateToProps, null)(Forecast);","map":{"version":3,"sources":["/Users/yingsizhou/Downloads/react-redux-weather-master/src/components/forecast.js"],"names":["React","Skycons","connect","Forecast","props","convert","F","Math","round","forecastlist","data","daily","map","obj","index","day","Date","time","getUTCDay","week","icon","replace","toUpperCase","summary","width","height","maxWidth","mode","temperatureMax","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AACxB,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,CAAD,EAAO;AACnB,WAAOC,IAAI,CAACC,KAAL,CAAW,CAACF,CAAC,GAAE,EAAJ,IAAU,CAAV,GAAY,CAAvB,CAAP;AACH,GAFD;;AAKA,MAAMG,YAAY,GAAGL,KAAK,CAACM,IAAN,CAAWC,KAAX,CAAiBD,IAAjB,CAAsBE,GAAtB,CAA0B,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAC3D,QAAGA,KAAK,GAAG,CAAX,EAAc;AACV,UAAIC,GAAG,GAAG,IAAIC,IAAJ,CAASH,GAAG,CAACI,IAAJ,GAAW,IAApB,EAA0BC,SAA1B,EAAV;AACA,UAAIC,IAAI,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CAAX;AACA,UAAIC,IAAI,GAAGP,GAAG,CAACO,IAAJ,CAASC,OAAT,CAAiB,IAAjB,EAAuB,GAAvB,EAA4BC,WAA5B,EAAX;AAEA,aACI;AAAK,QAAA,GAAG,EAAER,KAAV;AAAiB,QAAA,SAAS,EAAC,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,KAAK,EAAE,IAAIE,IAAJ,CAASH,GAAG,CAACI,IAAJ,GAAW,IAApB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyCE,IAAI,CAACJ,GAAD,CAA7C,CADJ,EAEI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEF,GAAG,CAACU,OAApB;AAA6B,QAAA,KAAK,EAAC,KAAnC;AAAyC,QAAA,MAAM,EAAC,KAAhD;AAAqD,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE,MAAR;AAAgBC,UAAAA,MAAM,EAAE,MAAxB;AAAgCC,UAAAA,QAAQ,EAAE;AAA1C,SAA5D;AAAgH,QAAA,KAAK,EAAC,OAAtH;AAA8H,QAAA,IAAI,EAAEN,IAApI;AAA0I,QAAA,QAAQ,EAAE,IAApJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGKhB,KAAK,CAACuB,IAAN,KAAe,GAAf,GAAqBpB,IAAI,CAACC,KAAL,CAAWK,GAAG,CAACe,cAAf,IAAiC,KAAtD,GAA6DvB,OAAO,CAACQ,GAAG,CAACe,cAAL,CAAP,GAA8B,KAHhG,CADJ,CADJ;AASH,KAdD,MAcO;AACH,aAAO,IAAP;AACH;AACJ,GAlBoB,CAArB;AAoBA,SACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCnB,YADD,CADJ,CADR,CADJ;AASH,CAnCD;;AAqCA,IAAMoB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAChCpB,IAAAA,IAAI,EAAEoB,KAAK,CAACpB,IADoB;AAEhCiB,IAAAA,IAAI,EAAEG,KAAK,CAACH;AAFoB,GAAZ;AAAA,CAAxB;;AAKA,eAAezB,OAAO,CAAC2B,eAAD,EAAkB,IAAlB,CAAP,CAA+B1B,QAA/B,CAAf","sourcesContent":["import React from 'react';\nimport Skycons from 'react-skycons'\nimport {connect} from 'react-redux';\n\nconst Forecast = (props) => {\n    const convert = (F) => {\n        return Math.round((F -32) * 5/9)\n    }\n\n\n    const forecastlist = props.data.daily.data.map((obj, index) => {\n        if(index < 7) {\n            let day = new Date(obj.time * 1000).getUTCDay()\n            let week = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\n            let icon = obj.icon.replace(/-/g, \"_\").toUpperCase()\n\n            return (\n                <div key={index} className=\"col-lg-1\">\n                    <section>\n                        <time title={new Date(obj.time * 1000)}>{week[day]}</time>\n                        <Skycons title={obj.summary} width=\"128\" height=\"128\"style={{width: '100%', height: 'auto', maxWidth: '150px'}} color='black' icon={icon} autoplay={true} />\n                        {props.mode === \"F\" ? Math.round(obj.temperatureMax) + \" 째F\": convert(obj.temperatureMax) + \" 째C\"}\n                    </section>\n                </div>\n            )\n        } else {\n            return null\n        }\n    })\n\n    return (\n        <div className=\"forecast border my-3\">\n                <div className=\"card-body text-secondary\">\n                    <div className=\"row seven-cols\">\n                    {forecastlist}\n                    </div>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    data: state.data,\n    mode: state.mode,\n});\n\nexport default connect(mapStateToProps, null)(Forecast)\n"]},"metadata":{},"sourceType":"module"}